// Generated by Dagger (https://dagger.dev).
package com.patrykkosieradzki.cryptobag.data;

import com.patrykkosieradzki.cryptobag.feature.home.data.HomeDataModule;
import com.patrykkosieradzki.cryptobag.common.remote.service.CoinRankingService;
import com.patrykkosieradzki.feature.home.domain.repository.CoinRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeDataModule_ProvideCoinRepositoryFactory implements Factory<CoinRepository> {
  private final Provider<CoinRankingService> coinRankingServiceProvider;

  public HomeDataModule_ProvideCoinRepositoryFactory(
      Provider<CoinRankingService> coinRankingServiceProvider) {
    this.coinRankingServiceProvider = coinRankingServiceProvider;
  }

  @Override
  public CoinRepository get() {
    return provideCoinRepository(coinRankingServiceProvider.get());
  }

  public static HomeDataModule_ProvideCoinRepositoryFactory create(
      Provider<CoinRankingService> coinRankingServiceProvider) {
    return new HomeDataModule_ProvideCoinRepositoryFactory(coinRankingServiceProvider);
  }

  public static CoinRepository provideCoinRepository(CoinRankingService coinRankingService) {
    return Preconditions.checkNotNullFromProvides(HomeDataModule.INSTANCE.provideCoinRepository(coinRankingService));
  }
}
